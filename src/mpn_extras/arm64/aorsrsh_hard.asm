dnl
dnl Copyright (C) 2024 Albin Ahlb√§ck
dnl
dnl This file is part of FLINT.
dnl
dnl FLINT is free software: you can redistribute it and/or modify it under
dnl the terms of the GNU Lesser General Public License (LGPL) as published
dnl by the Free Software Foundation; either version 3 of the License, or
dnl (at your option) any later version.  See <https://www.gnu.org/licenses/>.
dnl

include(`config.m4')

dnl Everything from n = 2 and onwards is generated by
dnl $topdir/dev/gen_arm_aors.jl.
dnl
dnl This generation was constructed with processors with Apple silicon in mind.
dnl Processors decoding less than 6 operations per cycle, or few store and load
dnl units may have worse performance.

define(`rp',  `x0')
define(`ap',  `x1')
define(`bp',  `x2')
define(`cnt', `x3')

define(`sx',  `x0') C Beware that this is synonymous with rp
define(`s0',  `x3')
define(`s1',  `x4')
define(`s2',  `x5')
define(`s3',  `x6')
define(`s4',  `x7')
define(`s5',  `x8')
define(`s6',  `x9')
define(`s7',  `x10')
define(`s8',  `x11')
define(`s9',  `x12')
define(`s10', `x13')
define(`s11', `x14')
define(`s12', `x15')
define(`s13', `x16')
define(`s14', `x17')

dnl r <- a +/- 2^n b
dnl
dnl For 0 <= i < n - 1, we have
dnl
dnl     r_{i} = a_{i} +/- (b_{i} >> n + b_{i + 1} << (64 - n)),
dnl
dnl and
dnl
dnl     r_{n - 1} = a_{n - 1} +/- (b_{n - 1} >> n).

PROLOGUE(flint_mpn_aorsrsh(1))
	ldr	s0, [ap,#0*8]
	ldr	s1, [bp,#0*8]
	lsr	s1, s1, cnt
	OP	s0, s0, s1
	str	s0, [rp,#0*8]
	cset	sx, CC
	ret
EPILOGUE()

PROLOGUE(flint_mpn_aors_2)
	ldp	s0, s2, [ap,#0*8]
	ldp	s1, s3, [bp,#0*8]
	OP	s0, s0, s1
	OPC	s2, s2, s3
	stp	s0, s2, [rp,#0*8]
	cset	sx, CC
	ret
EPILOGUE()
