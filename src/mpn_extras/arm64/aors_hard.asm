dnl
dnl Copyright (C) 2024 Albin Ahlb√§ck
dnl
dnl This file is part of FLINT.
dnl
dnl FLINT is free software: you can redistribute it and/or modify it under
dnl the terms of the GNU Lesser General Public License (LGPL) as published
dnl by the Free Software Foundation; either version 3 of the License, or
dnl (at your option) any later version.  See <https://www.gnu.org/licenses/>.
dnl

include(`config.m4')

dnl Everything from n = 2 and onwards is generated by
dnl $topdir/dev/gen_arm_aors.jl.
dnl
dnl This generation was constructed with processors with Apple silicon in mind.
dnl Processors decoding less than 6 operations per cycle, or few store and load
dnl units may have worse performance.

define(`rp',  `x0')
define(`ap',  `x1')
define(`bp',  `x2')

define(`sx',  `x0') C Beware that this is synonymous with rp
define(`s0',  `x3')
define(`s1',  `x4')
define(`s2',  `x5')
define(`s3',  `x6')
define(`s4',  `x7')
define(`s5',  `x8')
define(`s6',  `x9')
define(`s7',  `x10')
define(`s8',  `x11')
define(`s9',  `x12')
define(`s10', `x13')
define(`s11', `x14')
define(`s12', `x15')
define(`s13', `x16')
define(`s14', `x17')

define(ALL_AORS,`
PROLOGUE(flint_mpn_aors(1))
	ldr	s0, [ap,#0*8]
	ldr	s1, [bp,#0*8]
	OP	s0, s0, s1
	str	s0, [rp,#0*8]
	cset	sx, CC
	ret
EPILOGUE()

PROLOGUE(flint_mpn_aors(2))
	ldp	s0, s2, [ap,#0*8]
	ldp	s1, s3, [bp,#0*8]
	OP	s0, s0, s1
	OPC	s2, s2, s3
	stp	s0, s2, [rp,#0*8]
	cset	sx, CC
	ret
EPILOGUE()

PROLOGUE(flint_mpn_aors(3))
	ldp	s0, s2, [ap,#0*8]
	ldp	s1, s3, [bp,#0*8]
	OP	s0, s0, s1
	OPC	s2, s2, s3
	stp	s0, s2, [rp,#0*8]
	ldr	s4, [ap,#2*8]
	ldr	s5, [bp,#2*8]
	OPC	s4, s4, s5
	str	s4, [rp,#2*8]
	cset	sx, CC
	ret
EPILOGUE()

PROLOGUE(flint_mpn_aors(4))
	ldp	s0, s2, [ap,#0*8]
	ldp	s1, s3, [bp,#0*8]
	OP	s0, s0, s1
	OPC	s2, s2, s3
	stp	s0, s2, [rp,#0*8]
	ldp	s4, s6, [ap,#2*8]
	ldp	s5, s7, [bp,#2*8]
	OPC	s4, s4, s5
	OPC	s6, s6, s7
	stp	s4, s6, [rp,#2*8]
	cset	sx, CC
	ret
EPILOGUE()

PROLOGUE(flint_mpn_aors(5))
	ldp	s0, s2, [ap,#0*8]
	ldp	s1, s3, [bp,#0*8]
	OP	s0, s0, s1
	OPC	s2, s2, s3
	stp	s0, s2, [rp,#0*8]
	ldp	s4, s6, [ap,#2*8]
	ldp	s5, s7, [bp,#2*8]
	OPC	s4, s4, s5
	OPC	s6, s6, s7
	stp	s4, s6, [rp,#2*8]
	ldr	s8, [ap,#4*8]
	ldr	s9, [bp,#4*8]
	OPC	s8, s8, s9
	str	s8, [rp,#4*8]
	cset	sx, CC
	ret
EPILOGUE()

PROLOGUE(flint_mpn_aors(6))
	ldp	s0, s2, [ap,#0*8]
	ldp	s1, s3, [bp,#0*8]
	OP	s0, s0, s1
	OPC	s2, s2, s3
	stp	s0, s2, [rp,#0*8]
	ldp	s4, s6, [ap,#2*8]
	ldp	s5, s7, [bp,#2*8]
	OPC	s4, s4, s5
	OPC	s6, s6, s7
	stp	s4, s6, [rp,#2*8]
	ldp	s8, s10, [ap,#4*8]
	ldp	s9, s11, [bp,#4*8]
	OPC	s8, s8, s9
	OPC	s10, s10, s11
	stp	s8, s10, [rp,#4*8]
	cset	sx, CC
	ret
EPILOGUE()

PROLOGUE(flint_mpn_aors(7))
	ldp	s0, s2, [ap,#0*8]
	ldp	s1, s3, [bp,#0*8]
	OP	s0, s0, s1
	OPC	s2, s2, s3
	stp	s0, s2, [rp,#0*8]
	ldp	s4, s6, [ap,#2*8]
	ldp	s5, s7, [bp,#2*8]
	OPC	s4, s4, s5
	OPC	s6, s6, s7
	stp	s4, s6, [rp,#2*8]
	ldp	s8, s10, [ap,#4*8]
	ldp	s9, s11, [bp,#4*8]
	OPC	s8, s8, s9
	OPC	s10, s10, s11
	stp	s8, s10, [rp,#4*8]
	ldr	s12, [ap,#6*8]
	ldr	s13, [bp,#6*8]
	OPC	s12, s12, s13
	str	s12, [rp,#6*8]
	cset	sx, CC
	ret
EPILOGUE()

PROLOGUE(flint_mpn_aors(8))
	ldp	s0, s2, [ap,#0*8]
	ldp	s1, s3, [bp,#0*8]
	OP	s0, s0, s1
	OPC	s2, s2, s3
	stp	s0, s2, [rp,#0*8]
	ldp	s4, s6, [ap,#2*8]
	ldp	s5, s7, [bp,#2*8]
	OPC	s4, s4, s5
	OPC	s6, s6, s7
	stp	s4, s6, [rp,#2*8]
	ldp	s8, s10, [ap,#4*8]
	ldp	s9, s11, [bp,#4*8]
	OPC	s8, s8, s9
	OPC	s10, s10, s11
	stp	s8, s10, [rp,#4*8]
	ldp	s12, s14, [ap,#6*8]
	ldp	s13, s0, [bp,#6*8]
	OPC	s12, s12, s13
	OPC	s14, s14, s0
	stp	s12, s14, [rp,#6*8]
	cset	sx, CC
	ret
EPILOGUE()

PROLOGUE(flint_mpn_aors(9))
	ldp	s0, s2, [ap,#0*8]
	ldp	s1, s3, [bp,#0*8]
	OP	s0, s0, s1
	OPC	s2, s2, s3
	stp	s0, s2, [rp,#0*8]
	ldp	s4, s6, [ap,#2*8]
	ldp	s5, s7, [bp,#2*8]
	OPC	s4, s4, s5
	OPC	s6, s6, s7
	stp	s4, s6, [rp,#2*8]
	ldp	s8, s10, [ap,#4*8]
	ldp	s9, s11, [bp,#4*8]
	OPC	s8, s8, s9
	OPC	s10, s10, s11
	stp	s8, s10, [rp,#4*8]
	ldp	s12, s14, [ap,#6*8]
	ldp	s13, s0, [bp,#6*8]
	OPC	s12, s12, s13
	OPC	s14, s14, s0
	stp	s12, s14, [rp,#6*8]
	ldr	s1, [ap,#8*8]
	ldr	s2, [bp,#8*8]
	OPC	s1, s1, s2
	str	s1, [rp,#8*8]
	cset	sx, CC
	ret
EPILOGUE()

PROLOGUE(flint_mpn_aors(10))
	ldp	s0, s2, [ap,#0*8]
	ldp	s1, s3, [bp,#0*8]
	OP	s0, s0, s1
	OPC	s2, s2, s3
	stp	s0, s2, [rp,#0*8]
	ldp	s4, s6, [ap,#2*8]
	ldp	s5, s7, [bp,#2*8]
	OPC	s4, s4, s5
	OPC	s6, s6, s7
	stp	s4, s6, [rp,#2*8]
	ldp	s8, s10, [ap,#4*8]
	ldp	s9, s11, [bp,#4*8]
	OPC	s8, s8, s9
	OPC	s10, s10, s11
	stp	s8, s10, [rp,#4*8]
	ldp	s12, s14, [ap,#6*8]
	ldp	s13, s0, [bp,#6*8]
	OPC	s12, s12, s13
	OPC	s14, s14, s0
	stp	s12, s14, [rp,#6*8]
	ldp	s1, s3, [ap,#8*8]
	ldp	s2, s4, [bp,#8*8]
	OPC	s1, s1, s2
	OPC	s3, s3, s4
	stp	s1, s3, [rp,#8*8]
	cset	sx, CC
	ret
EPILOGUE()

PROLOGUE(flint_mpn_aors(11))
	ldp	s0, s2, [ap,#0*8]
	ldp	s1, s3, [bp,#0*8]
	OP	s0, s0, s1
	OPC	s2, s2, s3
	stp	s0, s2, [rp,#0*8]
	ldp	s4, s6, [ap,#2*8]
	ldp	s5, s7, [bp,#2*8]
	OPC	s4, s4, s5
	OPC	s6, s6, s7
	stp	s4, s6, [rp,#2*8]
	ldp	s8, s10, [ap,#4*8]
	ldp	s9, s11, [bp,#4*8]
	OPC	s8, s8, s9
	OPC	s10, s10, s11
	stp	s8, s10, [rp,#4*8]
	ldp	s12, s14, [ap,#6*8]
	ldp	s13, s0, [bp,#6*8]
	OPC	s12, s12, s13
	OPC	s14, s14, s0
	stp	s12, s14, [rp,#6*8]
	ldp	s1, s3, [ap,#8*8]
	ldp	s2, s4, [bp,#8*8]
	OPC	s1, s1, s2
	OPC	s3, s3, s4
	stp	s1, s3, [rp,#8*8]
	ldr	s5, [ap,#10*8]
	ldr	s6, [bp,#10*8]
	OPC	s5, s5, s6
	str	s5, [rp,#10*8]
	cset	sx, CC
	ret
EPILOGUE()

PROLOGUE(flint_mpn_aors(12))
	ldp	s0, s2, [ap,#0*8]
	ldp	s1, s3, [bp,#0*8]
	OP	s0, s0, s1
	OPC	s2, s2, s3
	stp	s0, s2, [rp,#0*8]
	ldp	s4, s6, [ap,#2*8]
	ldp	s5, s7, [bp,#2*8]
	OPC	s4, s4, s5
	OPC	s6, s6, s7
	stp	s4, s6, [rp,#2*8]
	ldp	s8, s10, [ap,#4*8]
	ldp	s9, s11, [bp,#4*8]
	OPC	s8, s8, s9
	OPC	s10, s10, s11
	stp	s8, s10, [rp,#4*8]
	ldp	s12, s14, [ap,#6*8]
	ldp	s13, s0, [bp,#6*8]
	OPC	s12, s12, s13
	OPC	s14, s14, s0
	stp	s12, s14, [rp,#6*8]
	ldp	s1, s3, [ap,#8*8]
	ldp	s2, s4, [bp,#8*8]
	OPC	s1, s1, s2
	OPC	s3, s3, s4
	stp	s1, s3, [rp,#8*8]
	ldp	s5, s7, [ap,#10*8]
	ldp	s6, s8, [bp,#10*8]
	OPC	s5, s5, s6
	OPC	s7, s7, s8
	stp	s5, s7, [rp,#10*8]
	cset	sx, CC
	ret
EPILOGUE()

PROLOGUE(flint_mpn_aors(13))
	ldp	s0, s2, [ap,#0*8]
	ldp	s1, s3, [bp,#0*8]
	OP	s0, s0, s1
	OPC	s2, s2, s3
	stp	s0, s2, [rp,#0*8]
	ldp	s4, s6, [ap,#2*8]
	ldp	s5, s7, [bp,#2*8]
	OPC	s4, s4, s5
	OPC	s6, s6, s7
	stp	s4, s6, [rp,#2*8]
	ldp	s8, s10, [ap,#4*8]
	ldp	s9, s11, [bp,#4*8]
	OPC	s8, s8, s9
	OPC	s10, s10, s11
	stp	s8, s10, [rp,#4*8]
	ldp	s12, s14, [ap,#6*8]
	ldp	s13, s0, [bp,#6*8]
	OPC	s12, s12, s13
	OPC	s14, s14, s0
	stp	s12, s14, [rp,#6*8]
	ldp	s1, s3, [ap,#8*8]
	ldp	s2, s4, [bp,#8*8]
	OPC	s1, s1, s2
	OPC	s3, s3, s4
	stp	s1, s3, [rp,#8*8]
	ldp	s5, s7, [ap,#10*8]
	ldp	s6, s8, [bp,#10*8]
	OPC	s5, s5, s6
	OPC	s7, s7, s8
	stp	s5, s7, [rp,#10*8]
	ldr	s9, [ap,#12*8]
	ldr	s10, [bp,#12*8]
	OPC	s9, s9, s10
	str	s9, [rp,#12*8]
	cset	sx, CC
	ret
EPILOGUE()

PROLOGUE(flint_mpn_aors(14))
	ldp	s0, s2, [ap,#0*8]
	ldp	s1, s3, [bp,#0*8]
	OP	s0, s0, s1
	OPC	s2, s2, s3
	stp	s0, s2, [rp,#0*8]
	ldp	s4, s6, [ap,#2*8]
	ldp	s5, s7, [bp,#2*8]
	OPC	s4, s4, s5
	OPC	s6, s6, s7
	stp	s4, s6, [rp,#2*8]
	ldp	s8, s10, [ap,#4*8]
	ldp	s9, s11, [bp,#4*8]
	OPC	s8, s8, s9
	OPC	s10, s10, s11
	stp	s8, s10, [rp,#4*8]
	ldp	s12, s14, [ap,#6*8]
	ldp	s13, s0, [bp,#6*8]
	OPC	s12, s12, s13
	OPC	s14, s14, s0
	stp	s12, s14, [rp,#6*8]
	ldp	s1, s3, [ap,#8*8]
	ldp	s2, s4, [bp,#8*8]
	OPC	s1, s1, s2
	OPC	s3, s3, s4
	stp	s1, s3, [rp,#8*8]
	ldp	s5, s7, [ap,#10*8]
	ldp	s6, s8, [bp,#10*8]
	OPC	s5, s5, s6
	OPC	s7, s7, s8
	stp	s5, s7, [rp,#10*8]
	ldp	s9, s11, [ap,#12*8]
	ldp	s10, s12, [bp,#12*8]
	OPC	s9, s9, s10
	OPC	s11, s11, s12
	stp	s9, s11, [rp,#12*8]
	cset	sx, CC
	ret
EPILOGUE()

PROLOGUE(flint_mpn_aors(15))
	ldp	s0, s2, [ap,#0*8]
	ldp	s1, s3, [bp,#0*8]
	OP	s0, s0, s1
	OPC	s2, s2, s3
	stp	s0, s2, [rp,#0*8]
	ldp	s4, s6, [ap,#2*8]
	ldp	s5, s7, [bp,#2*8]
	OPC	s4, s4, s5
	OPC	s6, s6, s7
	stp	s4, s6, [rp,#2*8]
	ldp	s8, s10, [ap,#4*8]
	ldp	s9, s11, [bp,#4*8]
	OPC	s8, s8, s9
	OPC	s10, s10, s11
	stp	s8, s10, [rp,#4*8]
	ldp	s12, s14, [ap,#6*8]
	ldp	s13, s0, [bp,#6*8]
	OPC	s12, s12, s13
	OPC	s14, s14, s0
	stp	s12, s14, [rp,#6*8]
	ldp	s1, s3, [ap,#8*8]
	ldp	s2, s4, [bp,#8*8]
	OPC	s1, s1, s2
	OPC	s3, s3, s4
	stp	s1, s3, [rp,#8*8]
	ldp	s5, s7, [ap,#10*8]
	ldp	s6, s8, [bp,#10*8]
	OPC	s5, s5, s6
	OPC	s7, s7, s8
	stp	s5, s7, [rp,#10*8]
	ldp	s9, s11, [ap,#12*8]
	ldp	s10, s12, [bp,#12*8]
	OPC	s9, s9, s10
	OPC	s11, s11, s12
	stp	s9, s11, [rp,#12*8]
	ldr	s13, [ap,#14*8]
	ldr	s14, [bp,#14*8]
	OPC	s13, s13, s14
	str	s13, [rp,#14*8]
	cset	sx, CC
	ret
EPILOGUE()

PROLOGUE(flint_mpn_aors(16))
	ldp	s0, s2, [ap,#0*8]
	ldp	s1, s3, [bp,#0*8]
	OP	s0, s0, s1
	OPC	s2, s2, s3
	stp	s0, s2, [rp,#0*8]
	ldp	s4, s6, [ap,#2*8]
	ldp	s5, s7, [bp,#2*8]
	OPC	s4, s4, s5
	OPC	s6, s6, s7
	stp	s4, s6, [rp,#2*8]
	ldp	s8, s10, [ap,#4*8]
	ldp	s9, s11, [bp,#4*8]
	OPC	s8, s8, s9
	OPC	s10, s10, s11
	stp	s8, s10, [rp,#4*8]
	ldp	s12, s14, [ap,#6*8]
	ldp	s13, s0, [bp,#6*8]
	OPC	s12, s12, s13
	OPC	s14, s14, s0
	stp	s12, s14, [rp,#6*8]
	ldp	s1, s3, [ap,#8*8]
	ldp	s2, s4, [bp,#8*8]
	OPC	s1, s1, s2
	OPC	s3, s3, s4
	stp	s1, s3, [rp,#8*8]
	ldp	s5, s7, [ap,#10*8]
	ldp	s6, s8, [bp,#10*8]
	OPC	s5, s5, s6
	OPC	s7, s7, s8
	stp	s5, s7, [rp,#10*8]
	ldp	s9, s11, [ap,#12*8]
	ldp	s10, s12, [bp,#12*8]
	OPC	s9, s9, s10
	OPC	s11, s11, s12
	stp	s9, s11, [rp,#12*8]
	ldp	s13, s0, [ap,#14*8]
	ldp	s14, s1, [bp,#14*8]
	OPC	s13, s13, s14
	OPC	s0, s0, s1
	stp	s13, s0, [rp,#14*8]
	cset	sx, CC
	ret
EPILOGUE()
')

define(`flint_mpn_aors',`flint_mpn_add_$1')
define(`OP',`adds')
define(`OPC',`adcs')
define(`CC',`cs')
ALL_AORS
undefine(`flint_mpn_aors')
undefine(`OP')
undefine(`OPC')

define(`flint_mpn_aors',`flint_mpn_sub_$1')
define(`OP',`subs')
define(`OPC',`sbcs')
define(`CC',`cc')
ALL_AORS
undefine(`flint_mpn_aors')
undefine(`OP')
undefine(`OPC')
